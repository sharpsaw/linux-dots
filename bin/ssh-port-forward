#!/bin/bash -e
## Just a handy script, because I find this invocation confusing. Don't forget -v.
ESC=$'\033'
NOTICE_COLOR="$ESC[32m"
PUBLIC_HOST_COLOR="$ESC[32m"
PUBLIC_PORT_COLOR="$ESC[34m"
LOCAL_PORT_COLOR="$ESC[33m"
DEFAULT_COLOR="$ESC[0m"

main() {
    if [ $# = 3 ]; then
        public_addr=$1
        public_port=$2
        local_port=$3
    else
        echo $#
        clues
        prompt
    fi
    go_go_go
    kill_howto
}

go_go_go() {
    echo "Running: ssh -fNR ${PUBLIC_PORT_COLOR}$public_port${DEFAULT_COLOR}:localhost:${LOCAL_PORT_COLOR}$local_port ${PUBLIC_HOST_COLOR}$public_addr${DEFAULT_COLOR} $@"

    # You could skip this whole script if you could remember the following
    # args.
    # I can't.
    R_arg=$public_port:localhost:$local_port
    ssh -fNR $R_arg $public_addr "$@"
    # BTW thanks to Freenode's #gentoo's marduk for pointing out -fN !
}

clues() {
    cat <<EOT
    ${NOTICE_COLOR}Some hints:$DEFAULT_COLOR

    Let's say you want the current machine's port ${LOCAL_PORT_COLOR}3000${DEFAULT_COLOR}
    to be publicly accessible via your ssh account as
    ${PUBLIC_HOST_COLOR}someserver.com${DEFAULT_COLOR}:${PUBLIC_PORT_COLOR}9000${DEFAULT_COLOR}, which happens to accept
    ssh connections from a nonstandard port, ${PUBLIC_HOST_COLOR}2222${DEFAULT_COLOR}.
    Your answers would be like this:
EOT

    cat <<EOT

    ${DEFAULT_COLOR}Public address: ${PUBLIC_HOST_COLOR}someserver.com -p 2222
    ${DEFAULT_COLOR}Public port: ${PUBLIC_PORT_COLOR}9000
    ${DEFAULT_COLOR}Local port: ${LOCAL_PORT_COLOR}3000
    $DEFAULT_COLOR

EOT

    cat <<EOT
    â€¦after running that you'll be able to connect to, say,
    http://${PUBLIC_HOST_COLOR}someserver.com${DEFAULT_COLOR}:${PUBLIC_PORT_COLOR}9000${DEFAULT_COLOR}
    and it will pipe into your localhost:${LOCAL_PORT_COLOR}3000${DEFAULT_COLOR}.
EOT

    echo
}

prompt() {
    read -ep "${DEFAULT_COLOR}Public address: ${PUBLIC_HOST_COLOR}" public_addr
    read -ep "${DEFAULT_COLOR}Public port: ${PUBLIC_PORT_COLOR}" public_port
    read -ep "${DEFAULT_COLOR}Local port: ${LOCAL_PORT_COLOR}" local_port
    echo -n $DEFAULT_COLOR
}

kill_howto() {
    find_pid="ps aux | grep \"[s]sh..fNR.$R_arg\" | awk \"{print\\\$2}\""
    cat <<EOT

    ${NOTICE_COLOR}OK.$DEFAULT_COLOR

    Now $PUBLIC_HOST_COLOR$public_addr:$PUBLIC_PORT_COLOR$public_port$DEFAULT_COLOR tunnels into $LOCAL_PORT_COLOR$local_port$DEFAULT_COLOR.

    You can close it down whenever with:

        ${NOTICE_COLOR}kill $(eval $find_pid)$DEFAULT_COLOR

    Or, if you forget that PID, you can find it with something like

        ${NOTICE_COLOR}kill \$($find_pid)$DEFAULT_COLOR
EOT
}

main "$@"
